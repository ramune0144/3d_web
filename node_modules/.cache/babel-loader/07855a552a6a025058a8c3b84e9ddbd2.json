{"ast":null,"code":"var _jsxFileName = \"E:\\\\3d_web\\\\src\\\\index.js\",\n    _this = this;\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AppWithRouter = function AppWithRouter() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = AppWithRouter;\nReactDOM.render( /*#__PURE__*/_jsxDEV(AppWithRouter, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nregisterServiceWorker();\n\nvar _c;\n\n$RefreshReg$(_c, \"AppWithRouter\");","map":{"version":3,"sources":["E:/3d_web/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","BrowserRouter","AppWithRouter","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,sBACpB,QAAC,aAAD;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADoB;AAAA,CAAtB;;KAAMA,a;AAMNJ,QAAQ,CAACK,MAAT,eAAgB,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAmCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnC;AACAL,qBAAqB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst AppWithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(<AppWithRouter />, document.getElementById('root'))\nregisterServiceWorker()"]},"metadata":{},"sourceType":"module"}