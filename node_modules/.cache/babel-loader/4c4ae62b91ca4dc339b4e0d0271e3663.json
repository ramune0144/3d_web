{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\3d_web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _slicedToArray from \"E:\\\\3d_web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\nimport _objectSpread from \"E:\\\\3d_web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\n\nvar _jsxFileName = \"E:\\\\3d_web\\\\src\\\\component\\\\UploadImg.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport _regeneratorRuntime from \"E:\\\\3d_web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport axios from \"axios\";\nimport React, { Suspense, useLayoutEffect, useState } from 'react';\nimport { Canvas, useLoader } from '@react-three/fiber';\nimport { Stage, OrbitControls } from '@react-three/drei';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Model(props) {\n  _s();\n\n  var geo = useLoader(PLYLoader, props.part);\n  useLayoutEffect(function () {\n    return void geo.computeVertexNormals();\n  }, [geo]);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n    castShadow: true,\n    receiveShadow: true,\n    geometry: geo\n  }, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"#e2872d\",\n      flatShading: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Model, \"TlD/iCHuxjOPqEIhAumjnQ8B+n0=\", false, function () {\n  return [useLoader];\n});\n\n_c = Model;\n\nvar UploadImg = function UploadImg() {\n  _s2();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imagePreviewUrl = _useState4[0],\n      setImagePreviewUrl = _useState4[1];\n\n  var onClickUpload = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var formData, uploadImg;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('file', file);\n              _context.next = 4;\n              return axios({\n                method: 'post',\n                url: 'http://127.0.0.1:5000/upload',\n                data: formData\n              });\n\n            case 4:\n              uploadImg = _context.sent;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onClickUpload() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleUploadImage = function handleUploadImage(e) {\n    var file = e.target.files[0];\n    var reader = new FileReader();\n\n    reader.onloadend = function () {\n      setFile(file);\n      setImagePreviewUrl(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        alignItems: \"center\",\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#a1a7a4\",\n          height: \"20%\",\n          width: \"auto\",\n          marginBottom: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"text\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#a1a7a4\",\n          height: \"50%\",\n          width: \"50%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          borderStyle: \"solid\",\n          marginTop: \"5%\",\n          borderWidth: \"10\",\n          borderColor: \"#343434\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Canvas, {\n          shadows: true,\n          dpr: [1, 2],\n          camera: {\n            position: [0, 0, 10],\n            fov: 55\n          },\n          children: [/*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: null,\n            children: /*#__PURE__*/_jsxDEV(Stage, {\n              children: /*#__PURE__*/_jsxDEV(Model, {\n                scale: 0.01,\n                part: imagePreviewUrl ? imagePreviewUrl : \"/T1.ply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10\",\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          children: \"This is a point cloud ply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 50,\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleUploadImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickUpload,\n          children: \" Upload \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(UploadImg, \"SPVCFUIom3DXwLRLNoBHSHvVeL0=\");\n\n_c2 = UploadImg;\nexport default UploadImg;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"UploadImg\");","map":{"version":3,"sources":["E:/3d_web/src/component/UploadImg.js"],"names":["axios","React","Suspense","useLayoutEffect","useState","Canvas","useLoader","Stage","OrbitControls","PLYLoader","Model","props","geo","part","computeVertexNormals","UploadImg","file","setFile","imagePreviewUrl","setImagePreviewUrl","onClickUpload","formData","FormData","append","method","url","data","uploadImg","handleUploadImage","e","target","files","reader","FileReader","onloadend","result","readAsDataURL","height","width","alignItems","flex","backgroundColor","marginBottom","marginLeft","marginRight","borderStyle","marginTop","borderWidth","borderColor","position","fov","textAlign"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { Suspense, useLayoutEffect, useState } from 'react'\r\nimport { Canvas, useLoader } from '@react-three/fiber'\r\nimport { Stage, OrbitControls } from '@react-three/drei'\r\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader'\r\nfunction Model(props) {\r\n  const geo = useLoader(PLYLoader, props.part)\r\n  \r\n  useLayoutEffect(() => void geo.computeVertexNormals(), [geo])\r\n  return (\r\n    <mesh castShadow receiveShadow geometry={geo} {...props}>\r\n      <meshStandardMaterial color=\"#e2872d\" flatShading />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nconst UploadImg = () => {\r\n  const [file, setFile] = useState({})\r\n  const [imagePreviewUrl, setImagePreviewUrl] = useState(null)\r\n  const onClickUpload = async () => {\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n    const uploadImg = await axios({\r\n      method: 'post',\r\n      url: 'http://127.0.0.1:5000/upload',\r\n      data: formData\r\n    })\r\n  }\r\n  const handleUploadImage = (e) => {\r\n    const file = e.target.files[0]\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setFile(file)\r\n      setImagePreviewUrl(reader.result)\r\n    }\r\n    reader.readAsDataURL(file)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div style={{ height: \"100%\", width: \"100%\",alignItems:\"center\",flex:1 }}>\r\n\r\n        <div style={{ backgroundColor: \"#a1a7a4\", height: \"20%\", width: \"auto\", marginBottom: \"auto\" }} >\r\n          <text></text>\r\n        </div>\r\n\r\n        <div style={{\r\n          backgroundColor: \"#a1a7a4\",\r\n          height: \"50%\", width: \"50%\", marginLeft: \"auto\", marginRight: \"auto\", borderStyle: \"solid\", marginTop: \"5%\", borderWidth: \"10\", borderColor: \"#343434\"\r\n        }}>\r\n          <Canvas shadows dpr={[1, 2]} camera={{ position: [0, 0, 10], fov: 55 }}>\r\n            <Suspense fallback={null}>\r\n              <Stage>\r\n                <Model scale={0.01} part={imagePreviewUrl ? imagePreviewUrl : \"/T1.ply\"} />\r\n              </Stage>\r\n            </Suspense>\r\n            <OrbitControls />\r\n          </Canvas>\r\n\r\n        </div>\r\n        <div style={{ marginTop: \"10\",textAlign:\"center\" }}>\r\n        <text >This is a point cloud ply</text>\r\n        </div>\r\n        \r\n        <div style={ {marginTop: 50 , textAlign:\"center\" }}>\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleUploadImage}\r\n          />\r\n          <button onClick={onClickUpload}> Upload </button>\r\n        </div>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default UploadImg"]},"metadata":{},"sourceType":"module"}